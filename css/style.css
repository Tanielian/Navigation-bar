/*The box-sizing property is used to tell the browser what the sizing properties (width and height) should include.
Should they include the border-box? Or just the content-box (which is the default value of the width and height properties)*/

* {
  box-sizing: border-box; 
}
/*When you specify CSS styles inside the "@keyframes rule", the animation will gradually change from the current style to the new style at certain times.*/


html,
body {
  width: 100%;
  height: 100%;
  margin:auto;
  background-image: url('Navigation-bar/images/3.JPG');
  background-size:100% 100%;
  position:relative;
  background-attachment:fixed;
  text-align:center;
  text-decoration:none;
}

h1{
	text-shadow: 4px 4px 4px #aaa;
    margin: 1px auto;
    font-size:40px;
    color: #fff;	
}


input[type=checkbox] {
  position: absolute;
  top: -9999px;
  left: -9999px;
}

label {
  display: flex;
  cursor: pointer;
  user-select: none;
}

nav[role="navigation"] {
  position: relative;
  width: 100%;
}
nav[role="navigation"] a,
nav[role="navigation"] label {
  color: #ccc;
  text-decoration: none;
  font: 1.4em sans-serif;
  transition: color .4s ease-in-out;
}


nav[role="navigation"] ul {
  padding: 0;
  margin: 0 auto;
  width: 100%;
  list-style: none;
}

/*We can select elements that are direct children of other elements
A child element is any element that is nested directly in another element. Elements that are nested deeper than that are called descendant elements.
ul > li will select all li that are a direct children ul*/

nav[role="navigation"] ul > li {
  float: left;
  padding: .55em .55em;
  width: 20%;
  background-color:tomato;
  text-align: center;
  transition-duration: .7s;
  transition-timing-function: linear;
  transition-property: box-shadow, color;
  box-shadow: 0 0.05em 0.25em 0 rgba(0, 0, 0, 0.35);
  cursor: pointer;
}
nav[role="navigation"] ul > li:hover {
  background-color: #00ffff;
  color: #fff;
  box-shadow: 0 0.05em 0.25em 0 rgba(0, 0, 0, 0.35), inset 0 0 0 2em rgba(0, 0, 0, 0.3);
}
nav[role="navigation"] ul > li:hover > a {
  color: #fff;
}

/* Code for mobile devices */


/* The @media rule is used to define different style rules for different media types/devices. */

@media screen and (max-width: 44em) {
  html,
  body {
    margin: 0;
  }
  


  nav[role="navigation"] ul {
    display: none;
    height: 100%;
  }
  nav[role="navigation"] label {
    position: relative;
    display: block;
    width: 100%;
    min-height: 2.25em;
    padding: .45em;
    font-size: 1.1em;
    margin: 0;
    border: 0.15em solid rgba(60, 60, 60, 0.2);
    background-color:tomato; 
  }
  nav[role="navigation"] label:after {
    position: absolute;
    right: .25em;
    top: 0;
    content: "\2261";
    font-size: 1.8em;
  }
  
  /* We can select all siblings of an element that follow it. This is like the Adjacent Selector (A + B) except it gets all of the following elements instead of one.


input ~ ul will select all ul that follow a input */
  nav[role="navigation"] input[type=checkbox]:checked ~ label:after {
    color: #222;
  }
  nav[role="navigation"] input[type=checkbox]:checked ~ ul {
    display: block;
  }
  nav[role="navigation"] input[type=checkbox]:checked ~ ul > li {
    width: 100%;
    opacity: .8;
    text-align: center;
  }
  /* The ::after selector inserts something after the content of each selected element(s).*/
  nav[role="navigation"] input[type=checkbox]:checked ~ ul > li:after {
    position: absolute;
    right: .25em;
    font: bold 1.4em sans-serif;
  }
  
  /*Pixel to Em Converter
•Set a default pixel size for body (usually 16px)
•Then, convert a pixel value to em, based on the default pixel size
•Or, convert an em value to pixels, based on the default pixel size
*/

 /* The content property is used with the :before and :after pseudo-elements, to insert generated content.*/
}
